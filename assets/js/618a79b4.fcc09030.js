"use strict";(self.webpackChunkdebugvideo_com=self.webpackChunkdebugvideo_com||[]).push([[636],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return c}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),m=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=m(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,s=e.originalType,l=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),h=m(n),c=i,u=h["".concat(l,".").concat(c)]||h[c]||p[c]||s;return n?a.createElement(u,r(r({ref:t},d),{},{components:n})):a.createElement(u,r({ref:t},d))}));function c(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var s=n.length,r=new Array(s);r[0]=h;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:i,r[1]=o;for(var m=2;m<s;m++)r[m]=n[m];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},5477:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return m},toc:function(){return d},default:function(){return h}});var a=n(7462),i=n(3366),s=(n(7294),n(3905)),r=["components"],o={},l="Manifest Issues",m={unversionedId:"manifest-issues",id:"manifest-issues",title:"Manifest Issues",description:"Automatic Stream Validators",source:"@site/docs/manifest-issues.md",sourceDirName:".",slug:"/manifest-issues",permalink:"/manifest-issues",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Stream Issues",permalink:"/stream-issues"},next:{title:"Segment Issues",permalink:"/segment-issues"}},d=[{value:"Automatic Stream Validators",id:"automatic-stream-validators",children:[{value:"HLS",id:"hls",children:[],level:3},{value:"DASH",id:"dash",children:[],level:3}],level:2},{value:"Human Powered Stream Validators",id:"human-powered-stream-validators",children:[{value:"Common HLS Manifest Issues",id:"common-hls-manifest-issues",children:[{value:"No segments",id:"no-segments",children:[],level:4},{value:"A live stream that isn&#39;t updating",id:"a-live-stream-that-isnt-updating",children:[],level:4},{value:"Alternate renditions with synchronization issues",id:"alternate-renditions-with-synchronization-issues",children:[{value:"Media Sequence Misalignment",id:"media-sequence-misalignment",children:[],level:5},{value:"Discontinuity Sequence Misalignment",id:"discontinuity-sequence-misalignment",children:[],level:5}],level:4},{value:"Short live windows",id:"short-live-windows",children:[],level:4},{value:"Segment durations exceed the target duration",id:"segment-durations-exceed-the-target-duration",children:[],level:4}],level:3},{value:"Common DASH Manifest Issues",id:"common-dash-manifest-issues",children:[{value:"Changing period start times on refreshes",id:"changing-period-start-times-on-refreshes",children:[],level:4},{value:"Changing Segment URLs",id:"changing-segment-urls",children:[],level:4}],level:3}],level:2}],p={toc:d};function h(e){var t=e.components,n=(0,i.Z)(e,r);return(0,s.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"manifest-issues"},"Manifest Issues"),(0,s.kt)("h2",{id:"automatic-stream-validators"},"Automatic Stream Validators"),(0,s.kt)("p",null,"Besides playing a stream in another player, tools exist to check for common issues with HLS and DASH streams."),(0,s.kt)("p",null,"These don't validate everything, but are often a good quick check to see if anything stands out."),(0,s.kt)("h3",{id:"hls"},"HLS"),(0,s.kt)("p",null,"Apple provides their own HLS validator through the command line tool ",(0,s.kt)("inlineCode",{parentName:"p"},"mediastreamvalidator"),". Details on it can be found at ",(0,s.kt)("a",{parentName:"p",href:"https://developer.apple.com/documentation/http_live_streaming/about_apple_s_http_live_streaming_tools"},"https://developer.apple.com/documentation/http_live_streaming/about_apple_s_http_live_streaming_tools")),(0,s.kt)("p",null,"To use it, run it on the command line along with the manifest URL:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"mediastreamvalidator https://d2zihajmogu5jn.cloudfront.net/bipbop-advanced/bipbop_16x9_variant.m3u8\n")),(0,s.kt)("h3",{id:"dash"},"DASH"),(0,s.kt)("p",null,"The DASH-IF provides a handy ",(0,s.kt)("a",{parentName:"p",href:"https://conformance.dashif.org/"},"DASH Conformance Tool")," online that saves a lot of time reading XML (thank you DASH-IF)."),(0,s.kt)("h2",{id:"human-powered-stream-validators"},"Human Powered Stream Validators"),(0,s.kt)("p",null,"Once you get used to reading HLS and DASH manifests (though can anyone truly be ",(0,s.kt)("em",{parentName:"p"},"happy")," reading XML), some issues stand out rather quickly, even without validation tools. The following are some notable issues that have occurred in streams:"),(0,s.kt)("h3",{id:"common-hls-manifest-issues"},"Common HLS Manifest Issues"),(0,s.kt)("h4",{id:"no-segments"},"No segments"),(0,s.kt)("p",null,"This one's easy, but if there are no segments, there's nothing to play."),(0,s.kt)("p",null,"This case may happen when a stream provider makes a manifest available for a live stream before the stream starts, and doesn't include any filler content. Alternatively, it may happen at the end of a live stream if the stream provider removes all segments from the manifest."),(0,s.kt)("h4",{id:"a-live-stream-that-isnt-updating"},"A live stream that isn't updating"),(0,s.kt)("p",null,"If a manifest has been refreshed multiple times and no new segments are added, then it's likely the player will complain, as there'll be nothing to play."),(0,s.kt)("p",null,"This is common for live streams which have ended, where the stream provider is supposed to add an ",(0,s.kt)("inlineCode",{parentName:"p"},"EXT-X-ENDLIST")," tag:"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"If the Media Playlist contains the final Media Segment of the presentation, then the Playlist file MUST contain the EXT-X-ENDLIST tag; this allows clients to minimize unproductive Playlist reloads.\n",(0,s.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-10#section-6.2.1"},"HTTP Live Streaming 2nd Edition - Section 6.2.1"))),(0,s.kt)("p",null,"Stream providers don't always do this, leading to player timeouts or other issues."),(0,s.kt)("h4",{id:"alternate-renditions-with-synchronization-issues"},"Alternate renditions with synchronization issues"),(0,s.kt)("p",null,"One of the keys to adaptive bitrate streaming is having multiple renditions with different bitrates. This is all well and good, so long as the renditions are kept in sync. If they aren't, then the player might not know how to line up content, leading to playback issues."),(0,s.kt)("p",null,"In live HLS media playlists, two numbers are key to syncing different renditions: ",(0,s.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-10#section-4.4.3.3"},"EXT-X-DISCONTINUITY-SEQUENCE")," and ",(0,s.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-10#section-4.4.3.2"},"EXT-X-MEDIA-SEQUENCE"),"."),(0,s.kt)("h5",{id:"media-sequence-misalignment"},"Media Sequence Misalignment"),(0,s.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Media Sequence")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},(0,s.kt)("inlineCode",{parentName:"p"},"EXT-X-MEDIA-SEQUENCE")," represents the segment number of the first segment in a playlist. Whenever segments are removed from live playlists, ",(0,s.kt)("inlineCode",{parentName:"p"},"EXT-X-MEDIA-SEQUENCE")," will increment by the number of removed segments. For instance, if you start with a live stream that has the following segments:"),(0,s.kt)("pre",{parentName:"div"},(0,s.kt)("code",{parentName:"pre"},'#EXTM3U\n#EXT-X-TARGETDURATION:10\n#EXT-X-VERSION:3\n#EXT-X-MEDIA-SEQUENCE:0\n#EXT-X-DISCONTINUITY-SEQUENCE:0\n#EXT-X-MAP:URI="init-segment.mp4"\n#EXTINF:10\nsegment0.mp4\n#EXTINF:10\nsegment1.mp4\n#EXTINF:10\nsegment2.mp4\n#EXTINF:10\nsegment3.mp4\n#EXTINF:10\nsegment4.mp4\n#EXTINF:10\nsegment5.mp4\n')),(0,s.kt)("p",{parentName:"div"},"and on a refresh two segments are removed:"),(0,s.kt)("pre",{parentName:"div"},(0,s.kt)("code",{parentName:"pre"},'#EXTM3U\n#EXT-X-TARGETDURATION:10\n#EXT-X-VERSION:3\n#EXT-X-MEDIA-SEQUENCE:2\n#EXT-X-DISCONTINUITY-SEQUENCE:0\n#EXT-X-MAP:URI="init-segment.mp4"\n#EXTINF:10\nsegment2.mp4\n#EXTINF:10\nsegment3.mp4\n#EXTINF:10\nsegment4.mp4\n#EXTINF:10\nsegment5.mp4\n')),(0,s.kt)("p",{parentName:"div"},"Then ",(0,s.kt)("inlineCode",{parentName:"p"},"EXT-X-MEDIA-SEQUENCE")," value is incremented by 2."))),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"EXT-X-MEDIA-SEQUENCE")," doesn't have to match between media playlists:"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"A client MUST NOT assume that segments with the same Media Sequence Number in different Media Playlists contain matching content\n",(0,s.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-10#section-4.4.3.2"},"HTTP Live Streaming 2nd Edition - Section 4.4.3.2"))),(0,s.kt)("p",null,"Although they don't have to match up precisely, if you do notice that the media playlists generally have similar timing values, it's worth checking the ",(0,s.kt)("a",{parentName:"p",href:"segment-issues#ffprobe"},"content itself")," to see that the media timing values line up."),(0,s.kt)("h5",{id:"discontinuity-sequence-misalignment"},"Discontinuity Sequence Misalignment"),(0,s.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Discontinuity Sequence")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},(0,s.kt)("inlineCode",{parentName:"p"},"EXT-X-DISCONTINUITY-SEQUENCE")," represents the number of ",(0,s.kt)("inlineCode",{parentName:"p"},"EXT-X-DISCONTINUITY"),' tags that have "fallen off" the playlist since the start of the stream. For instance, if you start with a live stream that has the following segments:'),(0,s.kt)("pre",{parentName:"div"},(0,s.kt)("code",{parentName:"pre"},'#EXTM3U\n#EXT-X-TARGETDURATION:10\n#EXT-X-VERSION:3\n#EXT-X-MEDIA-SEQUENCE:0\n#EXT-X-DISCONTINUITY-SEQUENCE:0\n#EXT-X-MAP:URI="init-segment.mp4"\n#EXTINF:10\nsegment0.mp4\n#EXT-X-DISCONTINUITY\n#EXT-X-MAP:URI="new-init-segment.mp4"\n#EXTINF:10\nsegment1.mp4\n#EXTINF:10\nsegment2.mp4\n#EXTINF:10\nsegment3.mp4\n#EXTINF:10\nsegment4.mp4\n#EXTINF:10\nsegment5.mp4\n')),(0,s.kt)("p",{parentName:"div"},"and on a refresh two segments are removed, including the discontinuity:"),(0,s.kt)("pre",{parentName:"div"},(0,s.kt)("code",{parentName:"pre"},'#EXTM3U\n#EXT-X-TARGETDURATION:10\n#EXT-X-VERSION:3\n#EXT-X-MEDIA-SEQUENCE:2\n#EXT-X-DISCONTINUITY-SEQUENCE:1\n#EXT-X-MAP:URI="init-segment.mp4"\n#EXTINF:10\nsegment2.mp4\n#EXTINF:10\nsegment3.mp4\n#EXTINF:10\nsegment4.mp4\n#EXTINF:10\nsegment5.mp4\n')),(0,s.kt)("p",{parentName:"div"},"Then ",(0,s.kt)("inlineCode",{parentName:"p"},"EXT-X-DISCONTINUITY-SEQUENCE")," value is incremented by 1."))),(0,s.kt)("p",null,"Most of the time, sync issues between media playlists are caused by mismatching ",(0,s.kt)("inlineCode",{parentName:"p"},"EXT-X-DISCONTINUITY-SEQUENCE")," values."),(0,s.kt)("p",null,"If a player is playing a live playlist, and it's trying to switch between different playlists (e.g., from a 360p rendition to a 720p rendition), it needs to know what timestamp offset to use. In order to determine the timestamp offset, it needs to know the discontinuity sequence value."),(0,s.kt)("p",null,"The number of ",(0,s.kt)("inlineCode",{parentName:"p"},"EXT-X-DISCONTINUITY")," tags in each rendition must match. Therefore, the ",(0,s.kt)("inlineCode",{parentName:"p"},"EXT-X-DISCONTINUITY-SEQUENCE")," must match. Note though that since segments in different renditions may have different durations, they may not line up on segments with similar names. Instead, the match must be whenever the stream reaches discontinuous content."),(0,s.kt)("p",null,"In most cases, this value loses sync when an encoder for one rendition on the server side goes down, and it adds an ",(0,s.kt)("inlineCode",{parentName:"p"},"EXT-X-DISCONTINUITY")," to its manifest to compensate for the down time. If this value isn't added in other media playlists though, the media stream is invalid, as the client has no way of knowing where to position the media. This should be addressed on the server side (the stream provider), as ",(0,s.kt)("inlineCode",{parentName:"p"},"EXT-X-DISCONTINUITY-SEQUENCE")," MUST be kept in sync between renditions."),(0,s.kt)("p",null,"Once you're used to looking for discontinuity sync issues between playlists, they are easy to spot."),(0,s.kt)("h4",{id:"short-live-windows"},"Short live windows"),(0,s.kt)("p",null,"The HLS specification requires a minimum of 3 target durations worth of content in a live stream:"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"The server MUST NOT remove a Media Segment from a Playlist file without an EXT-X-ENDLIST tag if that would produce a Playlist whose duration is less than three times the Target Duration. Doing so can trigger playback stalls.\n",(0,s.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-10#section-6.2.2"},"HTTP Live Streaming 2nd Edition - Section 6.2.2"))),(0,s.kt)("p",null,"The following manifest is illegal:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'#EXTM3U\n#EXT-X-TARGETDURATION:10\n#EXT-X-VERSION:3\n#EXT-X-MEDIA-SEQUENCE:0\n#EXT-X-DISCONTINUITY-SEQUENCE:0\n#EXT-X-MAP:URI="init-segment.mp4"\n#EXTINF:10\nsegment0.mp4\n#EXTINF:10\nsegment1.mp4\n#EXTINF:9\nsegment2.mp4\n')),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"EXT-X-TARGETDURATION")," is 10 seconds. There are 3 segments with a total of 29 seconds. This is less than the required 30 seconds the spec requires."),(0,s.kt)("p",null,"However, it's common for stream providers to only include 3 segments in their live stream, whether or not they meet the minimum requirement. In addition, even if the stream provider includes four segments, or however many is necessary to ensure it always provides 3 times the target duration, video players may still struggle to play the video without stalls. This is why the ",(0,s.kt)("a",{parentName:"p",href:"https://developer.apple.com/documentation/http_live_streaming/hls_authoring_specification_for_apple_devices"},"HLS Authoring Specification for Apple Devices")," requires at least 6 segments"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"8.11. You MUST provide at least six segments in a live/linear playlist.")),(0,s.kt)("p",null,"If media playlists don't include enough segments in a live window, depending on the robustness of the player and network, there may be issues with playback in the form of stalled playback, skipped content, and other errors."),(0,s.kt)("h4",{id:"segment-durations-exceed-the-target-duration"},"Segment durations exceed the target duration"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"The EXT-X-TARGETDURATION tag specifies the Target Duration, an upper bound on the duration of all Media Segments in the Playlist. The EXTINF duration of each Media Segment in a Playlist file, when rounded to the nearest integer, MUST be less than or equal to the Target Duration. Longer segments can trigger playback stalls or other errors. It applies to the entire Playlist file.\n",(0,s.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-10#section-4.4.3.1"},"HTTP Live Streaming 2nd Edition - Section 4.4.3.1"))),(0,s.kt)("p",null,"If any segment broadcasts an ",(0,s.kt)("inlineCode",{parentName:"p"},"EXTINF")," duration that exceeds the ",(0,s.kt)("inlineCode",{parentName:"p"},"EXT-X-TARGETDURATION"),", then it's possible the player will have issues with playback. These issues are exacerbated in live streams."),(0,s.kt)("p",null,"If you save the manifest as a string, here's a function which compares the ",(0,s.kt)("inlineCode",{parentName:"p"},"EXTINF")," durations to the ",(0,s.kt)("inlineCode",{parentName:"p"},"EXT-X-TARGETDURATION")," to find invalid segments:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"const checkForInvalidSegmentDurations = (manifestString) => {\n  const TARGETDURATION_TAG = '#EXT-X-TARGETDURATION:';\n  const EXTINF_TAG = '#EXTINF:';\n\n  const manifestArray = manifestString.split('\\n');\n  const targetDurationLine = manifestArray.find(\n    (line) => line.startsWith(TARGETDURATION_TAG));\n  const targetDuration = Number.parseFloat(\n    targetDurationLine.substring(TARGETDURATION_TAG.length));\n  const invalidDurations = manifestArray.reduce((acc, line) => {\n    if (!line.startsWith(EXTINF_TAG)) {\n       return acc;\n    }\n\n    const duration = Number.parseFloat(line.substring(EXTINF_TAG.length));\n\n    if (Math.round(duration) > targetDuration) {\n      acc.push(\n        `Found duration of ${duration}s, which, when rounded, exceeds target duration`);\n    }\n\n    return acc;\n  }, []);\n\n  if (invalidDurations.length) {\n    console.log(invalidDurations.join('\\n'));\n  } else {\n    console.log('Found no invalid durations');\n  }\n};\n")),(0,s.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Try it yourself")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"Run ",(0,s.kt)("inlineCode",{parentName:"p"},"checkForInvalidSegmentDurations")," on an HLS manifest. Try changing some of the durations in the manifest string and see if you can get it to report invalid durations."))),(0,s.kt)("h3",{id:"common-dash-manifest-issues"},"Common DASH Manifest Issues"),(0,s.kt)("p",null,"Often, issues with well formatted DASH manifests involve live manifests refreshes."),(0,s.kt)("h4",{id:"changing-period-start-times-on-refreshes"},"Changing period start times on refreshes"),(0,s.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Periods")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"Periods in DASH accomplish the same task as discontinuities in HLS."))),(0,s.kt)("p",null,"In a DASH manifest, a Period can have ",(0,s.kt)("inlineCode",{parentName:"p"},"id")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"start")," attributes. ",(0,s.kt)("inlineCode",{parentName:"p"},"Period@id")," helps identify Periods between manifest refreshes. ",(0,s.kt)("inlineCode",{parentName:"p"},"Period@start")," provides an anchor point for media segments within the period."),(0,s.kt)("p",null,"Prior to the 2019 DASH specification, ",(0,s.kt)("inlineCode",{parentName:"p"},"Period@id")," was an optional attribute for ",(0,s.kt)("inlineCode",{parentName:"p"},"dynamic")," (live) playlists. ",(0,s.kt)("inlineCode",{parentName:"p"},"Period@id")," is mentioned because, without it, the only way to sync Periods on refreshes was to use ",(0,s.kt)("inlineCode",{parentName:"p"},"Period@start"),", and that value could change. There was an ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/Dash-Industry-Forum/DASH-IF-IOP/issues/160"},"issue")," in the ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/Dash-Industry-Forum/DASH-IF-IOP"},"DASH-IF Interoperability Points")," regarding the topic of changing ",(0,s.kt)("inlineCode",{parentName:"p"},"Period@start")," times over MPD updates, and as of v4.1.2 of the IOP, section 4.4.3.3 states:"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"MPD@availabilityStartTime and ",(0,s.kt)("inlineCode",{parentName:"p"},"Period@start")," shall not be changed over MPD updates.")),(0,s.kt)("p",null,"If the MPD is following the latest DASH spec, then ",(0,s.kt)("inlineCode",{parentName:"p"},"Period@id")," can be used to match Periods between playlists. If not, but the MPD is following the latest DASH-IF IOP, then ",(0,s.kt)("inlineCode",{parentName:"p"},"Period@start")," can be used. If neither of those are being followed, and you notice that there's no ",(0,s.kt)("inlineCode",{parentName:"p"},"Period@id")," and the ",(0,s.kt)("inlineCode",{parentName:"p"},"Period@start")," values change, then it's likely that DASH players may run into issues."),(0,s.kt)("h4",{id:"changing-segment-urls"},"Changing Segment URLs"),(0,s.kt)("p",null,"Technically, there's no mention in the DASH specification that segment URLs can't change for live manifests on refreshes. Although most players should be able to handle this, it's possible that that's causing issues. It's not too common, and often the changes are minor (e.g., adding a query param), but it's worth checking."))}h.isMDXComponent=!0}}]);